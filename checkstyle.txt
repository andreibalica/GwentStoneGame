Starting audit...
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Coordinate.java:48:41: 'x' hides a field. [HiddenField]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Coordinate.java:48:54: 'y' hides a field. [HiddenField]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Coordinate.java:67:5: Class 'Coordinate' looks like designed for extension (can be subclassed), but the method 'setX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Coordinate' final or making the method 'setX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Coordinate.java:71:5: Class 'Coordinate' looks like designed for extension (can be subclassed), but the method 'setY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Coordinate' final or making the method 'setY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/StartGame.java:37:13: 'playerOneDeckIdx' hides a field. [HiddenField]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/StartGame.java:38:13: 'playerTwoDeckIdx' hides a field. [HiddenField]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Player.java:45:35: 'mana' hides a field. [HiddenField]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Player.java:52:38: 'mana' hides a field. [HiddenField]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Player.java:59:34: 'win' hides a field. [HiddenField]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Player.java:152:18: 'deck' hides a field. [HiddenField]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/GameTable.java:301: Line is longer than 100 characters (found 136). [LineLength]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/GameTable.java:347:26: '3' is a magic number. [MagicNumber]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/GameTable.java:431: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Deck.java:15:17: Parameter deck should be final. [FinalParameters]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Deck.java:19:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Deck.java:23:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/balica/POO/TemaGIT/oop-asignments/teme/tema/./src/classpackage/Game.java:50:5: Method length is 274 lines (max allowed is 150). [MethodLength]
Audit done.
Checkstyle ends with 17 errors.
